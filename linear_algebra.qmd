# Linear Algebra

<a href="https://en.wikipedia.org/wiki/Linear_algebra">Linear algebra</a> and in particular 
<a href="https://en.wikipedia.org/wiki/Numerical_linear_algebra">computational linear algebra</a> plays
a key role in almost all the material that will be discussed in these notes. 

In computational linear algebra we are concerned with the solution of linear systems of equations.
We can express such a system in the form

$$A \mathbf{x} = \mathbf{b}$$

We will see under which conditions such a system is solvable. In any case, we when solve such a system
we are interested in 

- accuracy; the algorithm stability as well as how well-conditioned the problem is play a crucial role
- efficiency; in general we are interested in large systems of equations

In general, the system of equations given above, will have a unique solution iff 

$$det(A) \neq 0$$

This condition implies that $A$ has linearly independent rows/columns and that A is invertible.
In this case the system has a unique solution given by

$$ \mathbf{x} = A^{-1}\mathbf{b}$$

Notice however that for the systems we are interested in, computing the matrix inverse i.e. $A^{-1}$ is either
computationally expensive or not feasible. So, although in theory we have a nice respresentation of the unique solution,
in practice this may not always be very useful.


When $$det(A) = 0$$

the system may have infinite solutions or none. When $\mathbf{b} \in ~range(A)$
then the system has an inifinite number of solutions. Whereas when $\mathbf{b} \notin ~range(A)$
the system has no solutions.

## Resources

The following is a list of resources that have been used in one way or another in order to put this
chapter together.

- <a href="https://github.com/fastai/numerical-linear-algebra">Computational Linear Algebra for Coders</a> GitHub repository with
material related to Computational linear algebra with a focus on Machine Learning.

